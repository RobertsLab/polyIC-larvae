# Extract plate, date, temperature, and timepoint
mutate(
plate = str_extract(FileName, "plate\\d+"),             # Extract "plateX"
date = str_extract(FileName, "^\\d{8}"),               # Extract 8-digit date
temperature = str_extract(FileName, "control|high"),   # Extract "control" or "test"
timepoint = str_extract(FileName, "T\\d+") %>%         # Extract "T0", "T1", etc.
str_remove("T") %>%                                  # Remove "T" prefix
as.numeric()                                         # Convert to numeric
)
# Store the data frame in the list
data_list[[file_name]] <- data
}
# Combine all data frames into a single data frame (optional)
combined_data <- bind_rows(data_list, .id = "Source")
# Print the first few rows of the combined data (optional)
head(combined_data)
# Rename columns
combined_data<-combined_data%>%
select(!c(Repeat, Type, Time, Source, Plate))%>%
rename("well"=Well, resazurin_counts=`Resazurin 0.1 (Counts)`)%>%
mutate(timepoint=as.character(timepoint))
head(combined_data)
# Chunk 4
metadata<-read_xlsx(path="data/resazurin/metadata/volume_testing_metadata.xlsx")%>%
mutate(date=as.character(date))
# Chunk 5
str(combined_data)
str(metadata)
full_data<-left_join(combined_data, metadata, by=c("date", "plate", "well", "temperature"))%>%
filter(!is.na(type))
head(full_data)
# Chunk 6
full_data%>%
ggplot(aes(x=timepoint, y=resazurin_counts, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
geom_line()+
scale_colour_manual(values=c("cyan4", "orange"))+
theme_classic()
# Chunk 7
full_data<-full_data%>%
group_by(date, plate, well, temperature, spat_treatment)%>%
arrange(date, plate, well)%>%
mutate(fluorescence.norm=resazurin_counts/first(resazurin_counts))
# Chunk 8
full_data%>%
ggplot(aes(x=timepoint, y=fluorescence.norm, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
geom_line()+
scale_colour_manual(values=c("cyan4", "orange"))+
theme_classic()
# Chunk 9
full_data%>%
filter(type=="blank")%>%
ggplot(aes(x=timepoint, y=fluorescence.norm, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
scale_colour_manual(values=c("cyan4", "orange"))+
geom_line()+
theme_classic()
# Chunk 10
blanks<-full_data%>%
filter(type=="blank")%>%
group_by(date, plate, temperature, timepoint, volume)%>%
summarise(mean_blank=mean(fluorescence.norm));blanks
# Chunk 11
blanks%>%
ggplot(aes(x=timepoint, y=mean_blank, colour=temperature))+
facet_wrap(~volume)+
geom_point()+
scale_colour_manual(values=c("cyan4", "orange"))+
geom_line()+
theme_classic()
# Chunk 12
full_data<-left_join(full_data, blanks)
full_data<-full_data%>%
filter(!type=="blank")%>%
mutate(value=fluorescence.norm-mean_blank)
# Chunk 13
full_data%>%
ggplot(aes(x=timepoint, y=value, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
geom_line()+
scale_colour_manual(values=c("cyan4", "orange"))+
theme_classic()
# Chunk 14
full_data<-full_data%>%
select(!resazurin_counts)%>%
select(!FileName)%>%
select(!type)%>%
select(!fluorescence.norm)%>%
select(!mean_blank)
# Chunk 15
full_data%>%
ggplot(aes(x=timepoint, y=value, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
scale_colour_manual(values=c("cyan4", "orange"))+
geom_line()+
theme_classic()
# Chunk 16
full_data%>%
ggplot(aes(x=timepoint, y=value, colour=volume, group=interaction(date, plate, well)))+
facet_wrap(~temperature)+
geom_point()+
geom_line()+
theme_classic()
# Chunk 17
model<-lmer(value ~ timepoint * temperature * volume + (1|plate:well), data=full_data)
summary(model)
anova(model)
rand(model)
qqPlot(residuals(model))
# Chunk 18
plot1<-full_data%>%
ggplot(aes(x=timepoint, y=value, color=temperature, fill=temperature))+
facet_grid(~volume)+
geom_point(alpha=0.5)+
geom_smooth(aes(group=temperature))+
scale_colour_manual(values=c("cyan4", "orange"))+
scale_fill_manual(values=c("cyan4", "orange"))+
theme_classic()+
xlab("Hour");plot1
plot1a<-full_data%>%
ggplot(aes(x=timepoint, y=value, color=volume, fill=volume))+
facet_grid(~temperature)+
geom_point(alpha=0.5)+
geom_smooth(aes(group=volume))+
theme_classic()+
xlab("Hour");plot1a
model<-lmer(value ~ timepoint * temperature * volume + (1|plate:well), data=full_data)
anova(model)
rand(model)
qqPlot(residuals(model))
plot1<-full_data%>%
ggplot(aes(x=timepoint, y=value, color=temperature, fill=temperature))+
facet_grid(~volume)+
geom_point(alpha=0.5)+
geom_smooth(aes(group=temperature))+
scale_colour_manual(values=c("cyan4", "orange"))+
scale_fill_manual(values=c("cyan4", "orange"))+
theme_classic()+
xlab("Hour");plot1
full_data%>%
ggplot(aes(x=timepoint, y=value, colour=volume, group=interaction(date, plate, well)))+
facet_wrap(~temperature)+
geom_point()+
geom_line()+
theme_classic()
blanks%>%
ggplot(aes(x=timepoint, y=mean_blank, colour=temperature))+
facet_wrap(~volume)+
geom_point()+
scale_colour_manual(values=c("cyan4", "orange"))+
geom_line()+
theme_classic()
full_data%>%
filter(type=="blank")%>%
ggplot(aes(x=timepoint, y=fluorescence.norm, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
scale_colour_manual(values=c("cyan4", "orange"))+
geom_line()+
theme_classic()
blanks<-full_data%>%
filter(type=="blank")%>%
group_by(date, plate, temperature, timepoint, volume)%>%
summarise(mean_blank=mean(fluorescence.norm));blanks
blanks%>%
ggplot(aes(x=timepoint, y=mean_blank, colour=temperature))+
facet_wrap(~volume)+
geom_point()+
scale_colour_manual(values=c("cyan4", "orange"))+
geom_line()+
theme_classic()
# Chunk 1
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
library(MASS)
library(tidyverse)
library(ggplot2)
library(readxl)
library(cowplot)
library(lme4)
library(lmerTest)
library(car)
library(effects)
library(emmeans)
# Chunk 3
# Set the folder path
folder_path <- "data/resazurin/plate_files/volume-testing/"  # Replace with your folder path
# List all Excel files in the folder
file_list <- list.files(path = folder_path, pattern = "\\.xls$", full.names = TRUE)
# Check if any files are found
if (length(file_list) == 0) {
stop("No Excel files found in the specified folder. Check the folder path or file extension.")
}
# Initialize an empty list to store data frames
data_list <- list()
# Loop through each file and load the data
for (file in file_list) {
# Ensure file is a character string
if (!is.character(file)) next
# Extract file name without extension
file_name <- tools::file_path_sans_ext(basename(file))
# Read the Excel file
data <- read_excel(file)
# Add a new column with the file name
data <- data %>%
mutate(FileName = file_name) %>%
# Extract plate, date, temperature, and timepoint
mutate(
plate = str_extract(FileName, "plate\\d+"),             # Extract "plateX"
date = str_extract(FileName, "^\\d{8}"),               # Extract 8-digit date
temperature = str_extract(FileName, "control|high"),   # Extract "control" or "test"
timepoint = str_extract(FileName, "T\\d+") %>%         # Extract "T0", "T1", etc.
str_remove("T") %>%                                  # Remove "T" prefix
as.numeric()                                         # Convert to numeric
)
# Store the data frame in the list
data_list[[file_name]] <- data
}
# Combine all data frames into a single data frame (optional)
combined_data <- bind_rows(data_list, .id = "Source")
# Print the first few rows of the combined data (optional)
head(combined_data)
# Rename columns
combined_data<-combined_data%>%
select(!c(Repeat, Type, Time, Source, Plate))%>%
rename("well"=Well, resazurin_counts=`Resazurin 0.1 (Counts)`)%>%
mutate(timepoint=as.character(timepoint))
head(combined_data)
# Chunk 4
metadata<-read_xlsx(path="data/resazurin/metadata/volume_testing_metadata.xlsx")%>%
mutate(date=as.character(date))
# Chunk 5
str(combined_data)
str(metadata)
full_data<-left_join(combined_data, metadata, by=c("date", "plate", "well", "temperature"))%>%
filter(!is.na(type))
head(full_data)
# Chunk 6
full_data%>%
ggplot(aes(x=timepoint, y=resazurin_counts, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
geom_line()+
scale_colour_manual(values=c("cyan4", "orange"))+
theme_classic()
# Chunk 7
full_data<-full_data%>%
group_by(date, plate, well, temperature, spat_treatment)%>%
arrange(date, plate, well)%>%
mutate(fluorescence.norm=resazurin_counts/first(resazurin_counts))
# Chunk 8
full_data%>%
ggplot(aes(x=timepoint, y=fluorescence.norm, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
geom_line()+
scale_colour_manual(values=c("cyan4", "orange"))+
theme_classic()
# Chunk 9
full_data%>%
filter(type=="blank")%>%
ggplot(aes(x=timepoint, y=fluorescence.norm, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
scale_colour_manual(values=c("cyan4", "orange"))+
geom_line()+
theme_classic()
# Chunk 10
blanks<-full_data%>%
filter(type=="blank")%>%
group_by(date, plate, temperature, timepoint, volume)%>%
summarise(mean_blank=mean(fluorescence.norm));blanks
# Chunk 11
blanks%>%
ggplot(aes(x=timepoint, y=mean_blank, colour=temperature))+
facet_wrap(~volume)+
geom_point()+
scale_colour_manual(values=c("cyan4", "orange"))+
geom_line()+
theme_classic()
# Chunk 12
full_data<-left_join(full_data, blanks)
full_data<-full_data%>%
filter(!type=="blank")%>%
mutate(value=fluorescence.norm-mean_blank)
# Chunk 13
full_data%>%
ggplot(aes(x=timepoint, y=value, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
geom_line()+
scale_colour_manual(values=c("cyan4", "orange"))+
theme_classic()
# Chunk 14
full_data<-full_data%>%
select(!resazurin_counts)%>%
select(!FileName)%>%
select(!type)%>%
select(!fluorescence.norm)%>%
select(!mean_blank)
# Chunk 15
full_data%>%
ggplot(aes(x=timepoint, y=value, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
scale_colour_manual(values=c("cyan4", "orange"))+
geom_line()+
theme_classic()
# Chunk 16
full_data%>%
ggplot(aes(x=timepoint, y=value, colour=volume, group=interaction(date, plate, well)))+
facet_wrap(~temperature)+
geom_point()+
geom_line()+
theme_classic()
# Chunk 17
model<-lmer(value ~ timepoint * temperature * volume + (1|plate:well), data=full_data)
summary(model)
anova(model)
rand(model)
qqPlot(residuals(model))
# Chunk 18
plot1<-full_data%>%
ggplot(aes(x=timepoint, y=value, color=temperature, fill=temperature))+
facet_grid(~volume)+
geom_point(alpha=0.5)+
geom_smooth(aes(group=temperature))+
scale_colour_manual(values=c("cyan4", "orange"))+
scale_fill_manual(values=c("cyan4", "orange"))+
theme_classic()+
xlab("Hour");plot1
plot1a<-full_data%>%
ggplot(aes(x=timepoint, y=value, color=volume, fill=volume))+
facet_grid(~temperature)+
geom_point(alpha=0.5)+
geom_smooth(aes(group=volume))+
theme_classic()+
xlab("Hour");plot1a
# Chunk 1
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
library(MASS)
library(tidyverse)
library(ggplot2)
library(readxl)
library(cowplot)
library(lme4)
library(lmerTest)
library(car)
library(effects)
library(emmeans)
# Chunk 3
# Set the folder path
folder_path <- "data/resazurin/plate_files/volume-testing/"  # Replace with your folder path
# List all Excel files in the folder
file_list <- list.files(path = folder_path, pattern = "\\.xls$", full.names = TRUE)
# Check if any files are found
if (length(file_list) == 0) {
stop("No Excel files found in the specified folder. Check the folder path or file extension.")
}
# Initialize an empty list to store data frames
data_list <- list()
# Loop through each file and load the data
for (file in file_list) {
# Ensure file is a character string
if (!is.character(file)) next
# Extract file name without extension
file_name <- tools::file_path_sans_ext(basename(file))
# Read the Excel file
data <- read_excel(file)
# Add a new column with the file name
data <- data %>%
mutate(FileName = file_name) %>%
# Extract plate, date, temperature, and timepoint
mutate(
plate = str_extract(FileName, "plate\\d+"),             # Extract "plateX"
date = str_extract(FileName, "^\\d{8}"),               # Extract 8-digit date
temperature = str_extract(FileName, "control|high"),   # Extract "control" or "test"
timepoint = str_extract(FileName, "T\\d+") %>%         # Extract "T0", "T1", etc.
str_remove("T") %>%                                  # Remove "T" prefix
as.numeric()                                         # Convert to numeric
)
# Store the data frame in the list
data_list[[file_name]] <- data
}
# Combine all data frames into a single data frame (optional)
combined_data <- bind_rows(data_list, .id = "Source")
# Print the first few rows of the combined data (optional)
head(combined_data)
# Rename columns
combined_data<-combined_data%>%
select(!c(Repeat, Type, Time, Source, Plate))%>%
rename("well"=Well, resazurin_counts=`Resazurin 0.1 (Counts)`)%>%
mutate(timepoint=as.character(timepoint))
head(combined_data)
# Chunk 4
metadata<-read_xlsx(path="data/resazurin/metadata/volume_testing_metadata.xlsx")%>%
mutate(date=as.character(date))
# Chunk 5
str(combined_data)
str(metadata)
full_data<-left_join(combined_data, metadata, by=c("date", "plate", "well", "temperature"))%>%
filter(!is.na(type))
head(full_data)
# Chunk 6
full_data%>%
ggplot(aes(x=timepoint, y=resazurin_counts, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
geom_line()+
scale_colour_manual(values=c("cyan4", "orange"))+
theme_classic()
# Chunk 7
full_data<-full_data%>%
group_by(date, plate, well, temperature, spat_treatment)%>%
arrange(date, plate, well)%>%
mutate(fluorescence.norm=resazurin_counts/first(resazurin_counts))
# Chunk 8
full_data%>%
ggplot(aes(x=timepoint, y=fluorescence.norm, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
geom_line()+
scale_colour_manual(values=c("cyan4", "orange"))+
theme_classic()
# Chunk 9
full_data%>%
filter(type=="blank")%>%
ggplot(aes(x=timepoint, y=fluorescence.norm, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
scale_colour_manual(values=c("cyan4", "orange"))+
geom_line()+
theme_classic()
# Chunk 10
blanks<-full_data%>%
filter(type=="blank")%>%
group_by(date, plate, temperature, timepoint, volume)%>%
summarise(mean_blank=mean(fluorescence.norm));blanks
# Chunk 11
blanks%>%
ggplot(aes(x=timepoint, y=mean_blank, colour=temperature))+
facet_wrap(~volume)+
geom_point()+
scale_colour_manual(values=c("cyan4", "orange"))+
geom_line()+
theme_classic()
# Chunk 12
full_data<-left_join(full_data, blanks)
full_data<-full_data%>%
filter(!type=="blank")%>%
mutate(value=fluorescence.norm-mean_blank)
# Chunk 13
full_data%>%
ggplot(aes(x=timepoint, y=value, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
geom_line()+
scale_colour_manual(values=c("cyan4", "orange"))+
theme_classic()
# Chunk 14
full_data<-full_data%>%
select(!resazurin_counts)%>%
select(!FileName)%>%
select(!type)%>%
select(!fluorescence.norm)%>%
select(!mean_blank)
# Chunk 15
full_data%>%
ggplot(aes(x=timepoint, y=value, colour=temperature, group=interaction(date, plate, well)))+
facet_wrap(~volume)+
geom_point()+
scale_colour_manual(values=c("cyan4", "orange"))+
geom_line()+
theme_classic()
# Chunk 16
full_data%>%
ggplot(aes(x=timepoint, y=value, colour=volume, group=interaction(date, plate, well)))+
facet_wrap(~temperature)+
geom_point()+
geom_line()+
theme_classic()
# Chunk 17
model<-lmer(value ~ timepoint * temperature * volume + (1|plate:well), data=full_data)
summary(model)
anova(model)
rand(model)
qqPlot(residuals(model))
# Chunk 18
plot1<-full_data%>%
ggplot(aes(x=timepoint, y=value, color=temperature, fill=temperature))+
facet_grid(~volume)+
geom_point(alpha=0.5)+
geom_smooth(aes(group=temperature))+
scale_colour_manual(values=c("cyan4", "orange"))+
scale_fill_manual(values=c("cyan4", "orange"))+
theme_classic()+
xlab("Hour");plot1
plot1a<-full_data%>%
ggplot(aes(x=timepoint, y=value, color=volume, fill=volume))+
facet_grid(~temperature)+
geom_point(alpha=0.5)+
geom_smooth(aes(group=volume))+
theme_classic()+
xlab("Hour");plot1a
anova(model)
